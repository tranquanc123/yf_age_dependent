vector[2] reporting_prop_prior;
vector[N] gamma_priors_mean;
vector[N] gamma_priors_sd;
}
parameters {
//real<lower=-20, upper = 20> FOI[N];
vector<lower=0>[N] gamma;
real age_dep1; //age dependent: position of the peak age
real<lower=0> age_dep2; //age dependent: spread of the peak
real age_dep3; //age dependent: skewness
vector<lower=-20, upper = 20>[N_case_study] rho_case;
real<lower=0, upper = 1> VE;
}
model {
//vector[100] age_dep_output_org;
vector[100] age_dep_output;
matrix[100, N] age_dep_m;
matrix[N, 100] gamma_m;
matrix[100, N] FOI_m;
matrix[100, N_sero_study] FOI_sero_m;
vector[N_row_sero_age] FOI_sero_cumsum;
vector[N_row_sero_age] seropos;
real p[Nrow_sero];
real p_ele;
vector[N_case_study] trans_rho_case;
vector[N_nrow_case_study] l_rho_case;
matrix[100, N_case_study] FOI_case_m;
matrix[nrow_FOI_append, N_case_study] FOI_case_m_appending;
matrix[100 + nrow_FOI_append, N_case_study] FOI_case_m_appended;
vector[N_nrow_case_study] FOI_case_v;
vector[N_nrow_case_study] FOI_case_int_v;
vector[N_nrow_case_study] exp_cases_prob;
vector[N_nrow_case_study] exp_cases;
vector[Nrow_case] exp_case_by_age_group;
vector[Nrow_case] exp_cases_mod;
// prior:
gamma ~ lognormal(gamma_priors_mean, gamma_priors_sd);
age_dep1 ~ normal(50, 125);
age_dep2 ~ normal(0, 150);
age_dep3 ~ student_t(2, 0, 0.5);
rho_case ~ normal(reporting_prop_prior[1], reporting_prop_prior[2]);
VE ~ beta(a_VE, b_VE);
//Age dependent component of FOI:
for(age in 1:100){
//age_dep_output_org[age] = exp(skew_normal_lpdf(age_seq[age]|age_dep1, age_dep2, age_dep3));
age_dep_output[age] = exp(skew_normal_lpdf(age_seq[age]|age_dep1, age_dep2, age_dep3));
}
//age_dep_output = age_dep_output_org ./ sum(age_dep_output_org);
//age_FOI = rep_matrix(age_dep_output, N); //getting the age dependent component FOI
//Combine to get the FOI matrix:
age_dep_m = rep_matrix(age_dep_output, N);
gamma_m = rep_matrix(gamma, 100);
FOI_m = age_dep_m .* (gamma_m)';
//LL of sero data:
FOI_sero_m = FOI_m[, N_sero_study_id];
for(i in 1:N_row_sero_age){
FOI_sero_cumsum[i] = sum(head(FOI_sero_m[, nrow_sero_study_age[i]], age_range_v[i] + 1));
}
seropos = 1-exp(-FOI_sero_cumsum);
for(iii in 1:Nrow_sero){
int n_row_sero_seq[n_row_sero[iii]];
n_row_sero_seq = N_row_sero_age_range[n_row_sero_start[iii]:n_row_sero_stop[iii]];
p_ele = sum(pop_v[n_row_sero_seq] .* (1 - cov_v[n_row_sero_seq]*VE) .* seropos[n_row_sero_seq])/sum(pop_v[n_row_sero_seq] .* (1 - cov_v[n_row_sero_seq]*VE));
if (p_ele > 1 - 1e-16)
p_ele = 1 - 1e-16;
if (p_ele < 1e-16)
p_ele = 1e-16;
p[iii] = p_ele;
}
//LL from case data:
trans_rho_case = inv_logit(rho_case);
FOI_case_m = FOI_m[, N_case_study_id];
FOI_case_m_appending = rep_matrix(FOI_case_m[100,], nrow_FOI_append);
FOI_case_m_appended = append_row(FOI_case_m, FOI_case_m_appending);
for(xi in 1:N_nrow_case_study){
FOI_case_v[xi] = FOI_case_m_appended[FOI_case_id_row[xi], nrow_case_study[xi]];
}
for(xii in 1:N_nrow_case_study){
int FOI_case_id_int = FOI_case_id_row[xii] - 1;
if(FOI_case_id_int == 0)
FOI_case_int_v[xii] = 0.0;
else
FOI_case_int_v[xii] = sum(head(FOI_case_m_appended[, nrow_case_study[xii]], FOI_case_id_int));
}
l_rho_case = trans_rho_case[nrow_case_study];
exp_cases_prob = exp(-FOI_case_int_v) .* (1 - exp(-FOI_case_v)) .* l_rho_case;
exp_cases = exp_cases_prob .* pop .* (1 - cov*VE);
for(xviii in 1:Nrow_case){
exp_case_by_age_group[xviii] = sum(exp_cases[study_agegroup_start[xviii]:study_agegroup_stop[xviii]]);
}
for(xx in 1:(Nrow_case)){
if(exp_case_by_age_group[xx] < 1e-10)
exp_cases_mod[xx] = 1e-10;
else
exp_cases_mod[xx] = exp_case_by_age_group[xx];
}
// LL:
target += binomial_lpmf(sero_pos| sero_size, p); //from sero data
target += poisson_lpmf(case_by_study_agegroup| exp_cases_mod);
}
"
#prior for gamma:
coun_list_study = sapply(case_study_id, function(x) filter(case.noti.df, study_id == x)$country %>% unique)
coun_list_study[!(coun_list_study %in% prior_gamma$ISO)] <- "BRA"
sero_list_study = sapply(sero_study_id, function(x) filter(sero_data, STUDY_ID == x)$ISO %>% unique)
match_prior_gamma = match(c(sero_list_study, coun_list_study), prior_gamma$ISO)
prior_gamma_input = prior_gamma[match_prior_gamma,]
#
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
data_stan = list(
N = N_study,          #number studies
age_seq = 0:99, #age sequence from 0 to 99
#n_samples_marLL = n_samples_marLL, #number of sample to calcualte marginal LL
#time_FOI_empty = matrix(0, nrow = N_study, ncol = 100),
N_sero_study = N_sero_study,          #number sero studies
N_sero_study_id = 1:N_sero_study, #id of sero studies
N_row_sero_age = length(age_range_v), #number of rows in every studies for every age
age_range_v = age_range_v, #age range of every row
nrow_sero_study_age = nrow_sero_study_age, #number of age in every row
pop_v = as.numeric(pop_v), # population for every age row
cov_v = as.numeric(cov_v), #coverage for every age row
N_row_sero_age_range = 1:length(age_range_v),
Nrow_sero = Nrow_sero, #number of row in sero dataset
n_row_sero_start = n_row_sero_start,
n_row_sero_stop = n_row_sero_stop,
n_row_sero = n_row_sero,
sero_pos = sero_data$POSITIVE,
sero_size = sero_data$SAMPLE_SIZE,
N_case_study = N_case_study, #number of case LR studies
N_case_study_id = N_sero_study + 1:N_case_study, #N_sero_study + N_case_study + 1:N_case_study
N_nrow_case_study = length(nrow_case_study), #length(nrow_case_study)
nrow_case_study = nrow_case_study,
FOI_case_id_row = FOI_case_id_row,
nrow_FOI_append = max(FOI_case_id_row) - 100,
length_case_study = length_case_study,
length_case_study_start = length_case_study_start,
length_case_study_stop = length_case_study_stop,
Nrow_case = length(study_agegroup_org),
pop = case.noti.df$pop,
cov = case.noti.df$cov,
study_agegroup_org = study_agegroup_org,
study_agegroup_start = study_agegroup_start,
study_agegroup_stop = study_agegroup_stop,
case_by_study_agegroup = case_by_study_agegroup,
#prior
a_VE = a_VE, b_VE = b_VE,
reporting_prop_prior = reporting_prop_prior,
gamma_priors_mean = prior_gamma_input$X1,
gamma_priors_sd = prior_gamma_input$X2
)
}
stan_fit <- stan(
model_code = stan_code,  # Stan program
data = data_stan,    # named list of data
chains = 4,             # number of Markov chains
warmup = 1e1,          # number of warmup iterations per chain
iter = 1e2,            # total number of iterations per chain
cores = 4,  # number of cores (could use one per chain)
thin = 1,
control = list(adapt_delta = 0.80)
#refresh = 0             # no progress shown
)
#all_model_type = c('Constant', "One_outbreak", "Two_outbreaks")
all_data_subset = c("SA", "AF", "SA_AF")
library(dplyr)
library(matrixStats)
library(stringr)
library(sn)
library(rstan)
setwd("/home/quan/Documents/NotreDame/Alex/Yellow fever/yf_age_exposure/code/")
#Load data:
all_data_subset = c("SA", "AF", "SA_AF")
model_type = 'Constant' #all_model_type[which.scenario]
#Load data:
sero_data = read.csv("../data/yf_sero_data_with_coverage_mod.csv")
sero_data = filter(sero_data, YEAR > 1980) #only get data from 1980
sero_study_id = rle(as.character(sero_data$STUDY_ID))
sero_data = filter(sero_data, STUDY_ID %in% sero_study_id$values[which(sero_study_id$lengths > 1)]) # study with age group > 1
case.noti.LR.df = read.csv("../data/yf_case_data_by_age_group_with_coverage_LR.csv")
case.noti.PAHO.df = read.csv("../data/yf_case_data_by_age_group_with_coverage_PAHO.csv") %>% filter(study_id != "ECU_PAHO")
readRDS("../data/FOI_rho_prior.rds") %>% list2env(globalenv())
prior_gamma = readRDS("../data/gamma_lnorm_priors_constant.rds")
#Vaccine efficacy: alpha and beta of beta distribution
a_VE = 22.812; b_VE = 1.306
Study_time = c((sero_data %>% group_by(STUDY_ID) %>% summarise(YEAR = mean(YEAR)))$YEAR,
(case.noti.LR.df %>% group_by(study_id) %>% summarise(year = mean(year)))$year)
#Generating summary:
par_sel_sum_l = c()
FOI_time_sum_data_l = c()
#pos_age_sum_data_l = c()
rho_sum_data_l = c()
Age_depend_sum_data_l = c()
Rhat_l = c()
WAIC_all = c()
sero_data_fit_l = c()
case_data_fit_l = c()
p_m_l = c()
n_samples = 1e3
which.scenario = 1
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
traceplot(stan_fit_ob, pars = c("gamma"))
traceplot(stan_fit_ob, pars = c("rho_case"))
traceplot(stan_fit_ob, pars = c("VE"))
pairs(stan_fit_ob, pars =c("VE", "age_dep1", "age_dep2", "age_dep3"))
which.scenario = 3
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
traceplot(stan_fit_ob, pars = c("gamma"))
traceplot(stan_fit_ob, pars = c("gamma"))
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
pairs(stan_fit_ob, pars =c("VE", "age_dep1", "age_dep2", "age_dep3"))
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
summary(stan_fit_ob)$summary
which.scenario
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
which.scenario = 1
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
par_sel = extract(stan_fit_ob, pars = c("gamma", "age_dep1", "age_dep2", "age_dep3", "rho_case", "VE")) %>% lapply(head, n = n_samples) %>%
Reduce(cbind, .)
FOI_par = par_sel[,FOI_par_id]
FOI_time_array = array(dim = c(100, N_study, n_samples))
for(i in 1:n_samples){
FOI_time_array[,,i] = FOI_func(unlist(FOI_par[i,])) %>% matrix(nrow = 100, ncol = N_study)
}
Age_depend_par = par_sel[,Age_depend_id]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
traceplot(stan_fit_ob, pars = c("gamma"))
traceplot(stan_fit_ob, pars = c("rho_case"))
traceplot(stan_fit_ob, pars = c("VE"))
pairs(stan_fit_ob, pars =c("VE", "age_dep1", "age_dep2", "age_dep3"))
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
par_sel = extract(stan_fit_ob, pars = c("gamma", "age_dep1", "age_dep2", "age_dep3", "rho_case", "VE")) %>% lapply(head, n = n_samples) %>%
Reduce(cbind, .)
FOI_par = par_sel[,FOI_par_id]
FOI_time_array = array(dim = c(100, N_study, n_samples))
for(i in 1:n_samples){
FOI_time_array[,,i] = FOI_func(unlist(FOI_par[i,])) %>% matrix(nrow = 100, ncol = N_study)
}
Age_depend_par = par_sel[,Age_depend_id]
age_dep_term_array = array(dim = c(100, N_study, n_samples))
for(i in 1:n_samples){
age_dep_term_array[,,i] = age_dep_func(unlist(Age_depend_par[i,]))
}
age_dep_term_array[,1,]
age_dep_func
age_dep_func(unlist(Age_depend_par[i,]))
Age_depend_par[i,]
Age_depend_par
Age_depend_id
par_sel
FOI_par_id
which.scenario
print(which.scenario)
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
traceplot(stan_fit_ob, pars = c("gamma"))
traceplot(stan_fit_ob, pars = c("rho_case"))
traceplot(stan_fit_ob, pars = c("VE"))
pairs(stan_fit_ob, pars =c("VE", "age_dep1", "age_dep2", "age_dep3"))
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
par_sel = extract(stan_fit_ob, pars = c("gamma", "age_dep1", "age_dep2", "age_dep3", "rho_case", "VE")) %>% lapply(head, n = n_samples) %>%
Reduce(cbind, .)
FOI_par = par_sel[,FOI_par_id]
FOI_par
FOI_par_id
N_study
#Load data:
all_data_subset = c("SA", "AF", "SA_AF")
model_type = 'Constant' #all_model_type[which.scenario]
#Load data:
sero_data = read.csv("../data/yf_sero_data_with_coverage_mod.csv")
sero_data = filter(sero_data, YEAR > 1980) #only get data from 1980
sero_study_id = rle(as.character(sero_data$STUDY_ID))
sero_data = filter(sero_data, STUDY_ID %in% sero_study_id$values[which(sero_study_id$lengths > 1)]) # study with age group > 1
case.noti.LR.df = read.csv("../data/yf_case_data_by_age_group_with_coverage_LR.csv")
case.noti.PAHO.df = read.csv("../data/yf_case_data_by_age_group_with_coverage_PAHO.csv") %>% filter(study_id != "ECU_PAHO")
readRDS("../data/FOI_rho_prior.rds") %>% list2env(globalenv())
prior_gamma = readRDS("../data/gamma_lnorm_priors_constant.rds")
#Vaccine efficacy: alpha and beta of beta distribution
a_VE = 22.812; b_VE = 1.306
Study_time = c((sero_data %>% group_by(STUDY_ID) %>% summarise(YEAR = mean(YEAR)))$YEAR,
(case.noti.LR.df %>% group_by(study_id) %>% summarise(year = mean(year)))$year)
#Generating summary:
par_sel_sum_l = c()
FOI_time_sum_data_l = c()
#pos_age_sum_data_l = c()
rho_sum_data_l = c()
Age_depend_sum_data_l = c()
Rhat_l = c()
WAIC_all = c()
sero_data_fit_l = c()
case_data_fit_l = c()
p_m_l = c()
n_samples = 1e3
print(which.scenario)
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
model_type
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#helper function ####
inverse_logit <- function(x) exp(x)/(exp(x) + 1)
quantile95cri <- function(x) quantile(x, probs = c(0.025, 0.5, 0.975))
case.noti.df
par_sel
par_sel
Age_depend_id = 7:9
FOI_time_array = array(dim = c(100, N_study, n_samples))
Age_depend_par = par_sel[,Age_depend_id]
age_dep_term_array = array(dim = c(100, N_study, n_samples))
for(i in 1:n_samples){
age_dep_term_array[,,i] = age_dep_func(unlist(Age_depend_par[i,]))
}
age_dep_term_array[,1,]
plot(age_dep_term_array[1,1,])
plot(age_dep_term_array[,1,1])
which.scenario
which.scenario = 3
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
traceplot(stan_fit_ob, pars = c("gamma"))
traceplot(stan_fit_ob, pars = c("rho_case"))
traceplot(stan_fit_ob, pars = c("VE"))
par_sel
Age_depend_id
Age_depend_id = 7:9
Age_depend_par = par_sel[,Age_depend_id]
age_dep_term_array = array(dim = c(100, N_study, n_samples))
for(i in 1:n_samples){
age_dep_term_array[,,i] = age_dep_func(unlist(Age_depend_par[i,]))
}
plot(age_dep_term_array[,1,1])
age_dep_term_array[,1,]
Age_depend_par
which.scenario
which.scenario = 1
print(which.scenario)
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
which.scenario
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
data_subset
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
traceplot(stan_fit_ob, pars = c("gamma"))
traceplot(stan_fit_ob, pars = c("rho_case"))
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
which.scenario = 3
print(which.scenario)
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
par_sel
par_sel = extract(stan_fit_ob, pars = c("gamma", "age_dep1", "age_dep2", "age_dep3", "rho_case", "VE")) %>% lapply(tail, n = n_samples) %>%
Reduce(cbind, .)
par_sel
FOI_par_id = 25:27
FOI_par = par_sel[,FOI_par_id]
FOI_time_array = array(dim = c(100, N_study, n_samples))
Age_depend_id
Age_depend_id = 25:27
Age_depend_par = par_sel[,Age_depend_id]
age_dep_term_array = array(dim = c(100, N_study, n_samples))
for(i in 1:n_samples){
age_dep_term_array[,,i] = age_dep_func(unlist(Age_depend_par[i,]))
}
plot(age_dep_term_array[,1,1])
which.scenario = 2
print(which.scenario)
# #model runs:
# model_type = all_model_type[which.scenario]
data_subset = all_data_subset[which.scenario]
source("util_function.R")
par_id(model_type)
FOI_function_model_type(model_type)
if(which.scenario != 2){
case.noti.df[is.na(case.noti.df$cov),]$pop = 1e-10
case.noti.df[is.na(case.noti.df$cov),]$cov = 0
}
#Par credible interval;
stan_fit_ob = readRDS(paste0("../output/MCMC_output/MCMC_output_1e4_noPAHO_sero_case_age_depend_", model_type,"_datasubset_", data_subset, "_rstan.Rdata"))
summary(stan_fit_ob)$summary
traceplot(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
pairs(stan_fit_ob, pars =c("VE", "age_dep1", "age_dep2", "age_dep3"))
stan_dens(stan_fit_ob, pars = c("age_dep1", "age_dep2", "age_dep3"))
stan_fit_ob
par_sel = extract(stan_fit_ob, pars = c("gamma", "age_dep1", "age_dep2", "age_dep3", "rho_case", "VE")) %>% lapply(tail, n = n_samples) %>%
Reduce(cbind, .)
FOI_par = par_sel[,FOI_par_id]
Age_depend_id
Age_depend_par = par_sel[,Age_depend_id]
Age_depend_par
par_sel
Age_depend_id = 19:21
Age_depend_par = par_sel[,Age_depend_id]
age_dep_term_array = array(dim = c(100, N_study, n_samples))
for(i in 1:n_samples){
age_dep_term_array[,,i] = age_dep_func(unlist(Age_depend_par[i,]))
}
Age_depend_par
age_dep_term_array[,1,]
matplot(age_dep_term_array[,1,], type = "l")
